{"system_prompt": "You are an expert and thoughtful SQL analyst and understand data very well. \nYou have a two-step role: You need to come up with potential user questions that could be asked about the data. \nNow, based on the questions you have come up with, you need to write SQL queries that would help answer those questions.\n\nAlways follow these instructions for generating the user-question:\n1. Make sure that the questions are relevant to the data and are not ambiguous.\n2. Make sure that the questions are human-like.\n3. Make sure the question is not too confusing.\n\nAlways follow these instructions for generating the SQL query:\n1. Only use the table names and column names that are in the metadata schema. Do NOT use any other tables names or column names.\n2. Do NOT create a JOIN statement or query multiple tables if the question can be answered using only one table.\n3. When writing SELECT statements, always add the table alias as a prefix to the column name. For example, this SQL query is not valid: `SELECT a FROM table1 JOIN table2 ON table1.a = table2.a`. Instead, this query is correct: `SELECT table1.a FROM table1 JOIN table2 ON table1.a = table2.a`\n4. SELECT statements should include all columns that are in the ORDER BY statements. For example, if the ORDER BY statement is `ORDER BY column_name`, then the SELECT statement should include `column_name`\n5. Make sure that the GROUP BY statements do NOT contain an alias, and only contain original column names that exist in the schema.\n6. If creating GROUP BY statements, always include columns with `id` in the column name in the SELECT and GROUP BY statements to ensure uniqueness.\n7. When matching a string pattern, always do case insensitive matching unless a reference query states otherwise or unless the column might represent a categorical variable. You can chain multiple patterns using the OR operator. (e.g. LOWER(column_name) LIKE \"%stringtomatch1%\" OR LOWER(column_name) ILIKE \"%stringtomatch2%\")\n8. When a user asks for data by month, they are typically asking for data by both the month and year\n9. If the question cannot be answered given the database schema, always generate a query that says `SELECT 'Sorry, I could not answer that. Could you please rephrase your question?' AS answer;`. Do not give a closest approximation to the user's question. Do not use proxies for unavailable information.\n\nAs a reference, to generate a valid user question and corresponding SQL you can use the following examples:\n{examples}", "user_prompt": "You need to generate 10 instances of (user_question, sql_code). The database schema is represented in the following CSV string:\n```{table_metadata_ddl}```\nFollow the same format as the examples to produce the user question and SQL code. Separate each genrated pair with a separator #."}
[{"question": "Which are the top 5 projects enrolled in the year 2022? ", "sql": "SELECT a.project_title, COUNT(DISTINCT a.unique_id) AS total_enrollments FROM temp_achive_lp_sapling_combined_activations_ai a WHERE a.year = 2022 GROUP BY a.project_title ORDER BY total_enrollments DESC NULLS LAST LIMIT 5;", "valid": 1}]
[{"question": "How many enrollments were started in the month of January in the year 2022?", "sql": "SELECT COUNT(DISTINCT a.unique_id) AS total_enrollments FROM temp_achive_lp_sapling_combined_activations_ai a WHERE a.month = 1 AND a.year = 2022;", "valid": 1}]
[{"question": "Can you provide a list of enrollments purchased from the student store in the year 2021?", "sql": "SELECT a.unique_id, a.project_title FROM temp_achive_lp_sapling_combined_activations_ai a WHERE a.year = 2021 AND a.purchased_from_studentstore ILIKE 'Yes-Purchase';", "valid": 1}]
[{"question": "How many enrollments used an access code in the year 2022?", "sql": "SELECT COUNT(DISTINCT a.unique_id) AS total_enrollments FROM temp_achive_lp_sapling_combined_activations_ai a WHERE a.year = 2022 AND a.has_used_access_code ILIKE 'Yes';", "valid": 1}]
[{"question": "Please provide the list of enrollments whose access has expired for the discipline Biology.", "sql": "SELECT a.unique_id, a.project_title FROM temp_achive_lp_sapling_combined_activations_ai a WHERE a.discipline ILIKE '%Biology%' AND a.student_subscription_status ILIKE 'Expired Access';", "valid": 1}]
[{"question": "How many active enrollments are there for the author John Doe in the year 2022? ", "sql": "SELECT COUNT(DISTINCT a.unique_id) AS total_active_enrollments FROM temp_achive_lp_sapling_combined_activations_ai a WHERE a.author_display_name ILIKE 'John%Doe%' AND a.student_subscription_status ILIKE 'Active Access' AND a.year = 2022;", "valid": 1}]
[{"question": "Can you provide the list of projects with the highest enrollments which have paid subscriptions?", "sql": "SELECT a.project_title, COUNT(DISTINCT a.unique_id) AS total_enrollments FROM temp_achive_lp_sapling_combined_activations_ai a WHERE a.paid_unpaid ILIKE 'Paid' GROUP BY a.project_title ORDER BY total_enrollments DESC NULLS LAST LIMIT 10;", "valid": 1}]
[{"question": "Can you find out the top 5 publishers based on enrollments for the year 2021? ", "sql": "SELECT a.product_publisher, COUNT(DISTINCT a.unique_id) AS total_enrollments FROM temp_achive_lp_sapling_combined_activations_ai a WHERE a.year = 2021 GROUP BY a.product_publisher ORDER BY total_enrollments DESC LIMIT 5;", "valid": 1}]
[{"question": "How many enrollments were started in the Rocky Mountain region from the Humanities division in the year 2022? ", "sql": "SELECT COUNT(a.unique_id) as total_enrollments FROM temp_achive_lp_sapling_combined_activations_ai a WHERE a.year = 2022 AND a.region ILIKE '%Rocky Mountain Region%' AND a.division ILIKE '%Humanities%';", "valid": 1}]
[{"question": "Which schools have the greatest number of enrollments for the Biology discipline in California in 2021?", "sql": "SELECT a.school, COUNT(a.unique_id) as total_enrollments FROM temp_achive_lp_sapling_combined_activations_ai a WHERE a.discipline ILIKE '%Biology%' AND a.year = 2021 AND a.sfdc_state ILIKE '%California%' GROUP BY a.school ORDER BY total_enrollments DESC NULLS LAST LIMIT 5;", "valid": 1}]
